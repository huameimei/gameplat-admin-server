<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameplat.admin.mapper.LiveMemberDayReportMapper">
  <select id="getDayCount" resultType="java.lang.Integer">
    SELECT COUNT(1) AS ts
    FROM
      ${tableName}
    WHERE settle = 1
      and stat_time = #{statTime}
  </select>


  <select id="queryReportList" resultType="com.gameplat.admin.model.vo.LiveReportVO"
    parameterType="com.gameplat.admin.model.dto.LiveMemberDayReportQueryDTO">
    SELECT s1.betAmount,
    s1.validAmount,
    s1.gameCount,
    s1.winAmount,
    s1.userNumber,
    s1.game_code gameCode,
    IF(s2.rebateMoney is null,0,s2.rebateMoney) rebateMoney,
    s1.winAmount-IF(s2.rebateMoney is null,0,s2.rebateMoney) companyAmount
    from (
    SELECT
    sum(dr.bet_amount) betAmount,
    sum(dr.valid_amount) validAmount,
    sum(dr.bet_count) gameCount,
    sum(dr.win_amount) winAmount,
    count(DISTINCT dr.account) userNumber,
    dr.game_code
    FROM
    live_member_day_report dr where 1=1
    <if test="betStartDate != null">
      <![CDATA[
         and dr.stat_time >= #{betStartDate}
      ]]>
    </if>
    <if test="betEndDate != null">
      <![CDATA[
        and dr.stat_time <= #{betEndDate}
      ]]>
    </if>
    <if test="userPaths != null and userPaths != ''">
      and dr.user_paths like #{user_paths}
    </if>
    <if test="account != null and account != ''">
      and dr.account like #{account}
    </if>
    GROUP BY dr.game_code) s1 LEFT JOIN (
    SELECT
    sum(rr.real_rebate_money) rebateMoney,
    rr.game_code
    FROM
    live_rebate_report rr where 1=1
    <if test="betStartDate != null">
      <![CDATA[
         and rr.stat_time >= #{betStartDate}
      ]]>
    </if>
    <if test="betEndDate != null">
      <![CDATA[
         and rr.stat_time <= #{betEndDate}
      ]]>
    </if>
    <if test="userPaths != null and userPaths != ''">
      and rr.user_paths like #{user_paths}
    </if>
    <if test="account != null and account != ''">
      and rr.account like #{account}
    </if>
    GROUP BY rr.game_code) s2 on s1.game_code=s2.game_code
  </select>


  <select id="findByStatTimeBetweenAndValidBetAmountGtZero"
    resultType="com.gameplat.admin.model.vo.LiveMemberDayReportVO">
    SELECT t.`member_id`,
    t.`account`,
    t.`real_name`,
    t.`user_paths`,
    t.`game_code`,
    t.`stat_time`,
    t.`game_kind`,
    t.`first_kind`,
    SUM(t.`valid_amount`) AS `valid_amount`,
    u.user_level as userLevel
    FROM live_member_day_report t
    left join member u
    on t.member_id = u.id WHERE valid_amount > 0
    <choose>
      <when test="endDate == startDate">
        AND  stat_time = #{startDate}
      </when>
      <otherwise>
        AND stat_time BETWEEN #{startDate} AND #{endDate}
      </otherwise>
    </choose>
    GROUP BY t.`member_id`, t.`game_code`, t.`game_kind`
  </select>

    <select id="getGameReportInfo" resultType="com.gameplat.admin.model.bean.ActivityStatisticItem">
      SELECT
      a.account userName,
      a.cumulativeGameDml,
      a.gameWinAmount
      <if test="sportValidAmount != null">
        ,SUM(IFNULL( b.num, 0 )) AS cumulativeGameDmDays
      </if>
      FROM(
      SELECT account, SUM( valid_amount ) cumulativeGameDml, SUM( win_amount ) gameWinAmount
      FROM live_member_day_report
      <where>
        <if test="startTime != null">
          AND stat_time <![CDATA[ >= ]]> date_format(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime != null">
          AND stat_time <![CDATA[ <= ]]> date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="sportGameList != null and sportGameList != ''">
          AND FIND_IN_SET(first_kind, #{sportGameList})
        </if>
      </where>
      GROUP BY account ) a
      <if test="sportValidAmount != null">
        LEFT JOIN ( SELECT account,
                           CASE WHEN SUM( valid_amount ) >= #{sportValidAmount} THEN
                               1 ELSE 0 END num
        FROM live_member_day_report
        <where>
          <if test="startTime != null">
            AND stat_time <![CDATA[ >= ]]> date_format(#{startTime}, '%Y-%m-%d')
          </if>
          <if test="endTime != null">
            AND stat_time <![CDATA[ <= ]]> date_format(#{endTime}, '%Y-%m-%d')
          </if>
          <if test="sportGameList != null and sportGameList != ''">
            AND FIND_IN_SET(first_kind, #{sportGameList})
          </if>
        </where>
        GROUP BY account,stat_time ) b ON a.account = b.account
      </if>
      <where>
        <if test="userNameList != null and userNameList.size > 0">
          AND a.user_name in
          <foreach collection="userNameList" index="index" item="item" open="(" close=")" separator=",">
            #{item}
          </foreach>
        </if>
      </where>
      GROUP BY a.user_name
    </select>

  <select id="findGameDmlDateList" resultType="com.gameplat.admin.model.bean.ActivityStatisticItem">
    SELECT
    user_name userName,
    GROUP_CONCAT(DISTINCT(count_date)) AS gameCountDates
    FROM
    ( SELECT user_name, count_date, sum( valid_amount ) AS totalAmount
    FROM
    member_game_day_report
    <where>
      <if test="userNameList != null and userNameList.size > 0">
        and user_name in
        <foreach collection="userNameList" index="index" item="item" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="startTime != null">
        and count_date <![CDATA[ >= ]]> date_format(#{startTime}, '%Y-%m-%d')
      </if>
      <if test="endTime != null">
        and count_date <![CDATA[ <= ]]> date_format(#{endTime}, '%Y-%m-%d')
      </if>
      <if test="sportGameList != null and sportGameList != ''">
        and find_in_set(first_kind, #{sportGameList})
      </if>
    </where>
    GROUP BY user_name, count_date ) AS a
    <where>
      <if test="sportValidAmount != null">
        and totalAmount >= #{sportValidAmount}
      </if>
    </where>
    GROUP BY a.user_name
  </select>


  <insert id="saveMemberDayReport">
    INSERT INTO live_member_day_report (account, bet_amount, valid_amount, win_amount, stat_time,
                                      game_code, game_kind, first_kind, create_time, bet_count,
                                      win_count, revenue, member_id, real_name, user_paths)
    SELECT ts.*, u.id, u.real_name, u.super_path AS user_paths
    FROM (
           SELECT re.account,
                  SUM(re.bet_amount)               AS bet_amount,
                  SUM(re.valid_amount)             AS valid_amount,
                  SUM(re.win_amount)               AS win_amount,
                  re.rebate_time                   as stat_time,
                  #{gamePlatform.code}             AS game_code,
                  re.game_kind,
                  re.first_kind,
                  SYSDATE()                        AS create_time,
                  COUNT(1)                         AS bet_count,
                  SUM(IF(re.win_amount > 0, 1, 0)) AS win_count,
                  SUM(re.revenue)                  as revenue
           FROM ${tableName} re
           WHERE 1 = 1
             AND re.rebate_time = #{statTime}
             AND re.settle = 1
           GROUP BY re.account, re.game_kind) ts
           JOIN member u ON ts.account = u.account
  </insert>

</mapper>
