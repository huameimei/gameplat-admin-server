<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameplat.admin.mapper.GameMemberReportMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.gameplat.model.entity.member.MemberDayReport">
        <id column="count_date" property="countDate"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_name" property="parentName"/>
        <result column="user_type" property="userType"/>
        <result column="vip_level" property="vipLevel"/>
        <result column="user_level" property="userLevel"/>
        <result column="agent_path" property="agentPath"/>
        <result column="recharge_count" property="rechargeCount"/>
        <result column="recharge_amount" property="rechargeAmount"/>
        <result column="discount_amount" property="discountAmount"/>
        <result column="jackpot_amount" property="jackpotAmount"/>
        <result column="withdraw_count" property="withdrawCount"/>
        <result column="withdraw_amount" property="withdrawAmount"/>
        <result column="fee_amount" property="feeAmount"/>
        <result column="bet_amount" property="betAmount"/>
        <result column="valid_amount" property="validAmount"/>
        <result column="win_amount" property="winAmount"/>
        <result column="water_amount" property="waterAmount"/>
        <result column="first_recharge_amount" property="firstRechargeAmount"/>
        <result column="first_withdraw_amount" property="firstWithdrawAmount"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="abnormal_income" property="abnormalIncome"/>
        <result column="abnormal_outcome" property="abnormalOutcome"/>
        <result column="lottery_order_count" property="lotteryOrderCount"/>
        <result column="sport_order_count" property="sportOrderCount"/>
        <result column="real_order_count" property="realOrderCount"/>
        <result column="lottery_win_order_count" property="lotteryWinOrderCount"/>
        <result column="sport_win_order_count" property="sportWinOrderCount"/>
        <result column="real_win_order_count" property="realWinOrderCount"/>
        <result column="lottery_valid_amount" property="lotteryValidAmount"/>
        <result column="sport_valid_amount" property="sportValidAmount"/>
        <result column="real_valid_amount" property="realValidAmount"/>
        <result column="lottery_win_amount" property="lotteryWinAmount"/>
        <result column="sport_win_amount" property="sportWinAmount"/>
        <result column="real_win_amount" property="realWinAmount"/>
        <result column="lottery_water_amount" property="lotteryWaterAmount"/>
        <result column="sport_water_amount" property="sportWaterAmount"/>
        <result column="real_water_amount" property="realWaterAmount"/>
        <result column="lottery_profit_rate" property="lotteryProfitRate"/>
        <result column="sport_profit_rate" property="sportProfitRate"/>
        <result column="real_profit_rate" property="realProfitRate"/>
        <result column="lottery_win_rate" property="lotteryWinRate"/>
        <result column="sport_win_rate" property="sportWinRate"/>
        <result column="real_win_rate" property="realWinRate"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        `count_date`
        , `user_id`, `user_name`, `parent_id`, `parent_name`, `user_type`, `vip_level`, `user_level`, `agent_path`, `recharge_count`,          `recharge_amount`, `discount_amount`, `jackpot_amount`, `withdraw_count`, `withdraw_amount`, `fee_amount`, `bet_amount`, `valid_amount`,          `win_amount`, `water_amount`, `first_recharge_amount`, `first_withdraw_amount`, `create_time`, `update_time`, `abnormal_income`,                  `abnormal_outcome`, `lottery_order_count`, `sport_order_count`, `real_order_count`, `lottery_win_order_count`, `sport_win_order_count`,           `real_win_order_count`, `lottery_valid_amount`, `sport_valid_amount`, `real_valid_amount`, `lottery_win_amount`, `sport_win_amount`,              `real_win_amount`, `lottery_water_amount`, `sport_water_amount`, `real_water_amount`, `lottery_profit_rate`, `sport_profit_rate`,                 `real_profit_rate`, `lottery_win_rate`, `sport_win_rate`, `real_win_rate`
    </sql>


    <select id="findMemberDayReportPage" resultMap="BaseResultMap">
        SELECT
        user_name,
        parent_name,
        vip_level,
        user_level,
        sum( recharge_count ) recharge_count,
        sum( recharge_amount ) recharge_amount,
        sum( first_recharge_amount ) first_recharge_amount,
        sum( discount_amount ) discount_amount,
        sum( jackpot_amount ) jackpot_amount,
        sum( withdraw_count ) withdraw_count,
        sum( withdraw_amount ) withdraw_amount,
        sum( first_withdraw_amount ) first_withdraw_amount,
        sum( fee_amount ) fee_amount,
        sum( bet_amount ) bet_amount,
        sum( valid_amount ) valid_amount,
        sum( win_amount ) win_amount,
        sum( water_amount ) water_amount
        FROM
        member_day_report
        WHERE 1= 1
        <if test="dto.userName != null and dto.userName != ''">
            and user_name = #{dto.userName}
        </if>
        <if test="dto.startTime != null and dto.endTime != null">
            and count_date BETWEEN #{dto.startTime}
            AND #{dto.endTime}
        </if>
        <if test="dto.isFristCharge != null and dto.isFristCharge != ''">
            <if test="dto.isFristCharge == dto.isNFristCharge">
                and first_recharge_amount is null
            </if>
            <if test="dto.isFristCharge == dto.isYFristCharge">
                and first_recharge_amount is not null
            </if>
        </if>
        <if test="dto.isFristWithdraw != null and dto.isFristWithdraw != ''">
            <if test="dto.isFristWithdraw == dto.isNFristWithdraw">
                and first_withdraw_amount is null
            </if>
            <if test="dto.isFristWithdraw == dto.isYFristWithdraw">
                and first_withdraw_amount is not null
            </if>
        </if>
        GROUP BY
        user_name
    </select>


    <select id="findSumMemberDayReport" resultType="map">
        SELECT
        ifnull(sum( recharge_count ),0) sumRechargeCount,
        ifnull(sum( recharge_amount ),0) sumRechargeAmount,
        ifnull(sum( first_recharge_amount ),0) sumFirstRechargeAmount,
        ifnull(sum( discount_amount ),0) sumDiscountAmount,
        ifnull(sum( jackpot_amount ),0) sumJackpotAmount,
        ifnull(sum( withdraw_count ),0) sumWithdrawCount,
        ifnull(sum( withdraw_amount ),0) sumWithdrawAmount,
        ifnull(sum( first_withdraw_amount ),0) sumFirstWithdrawAmount,
        ifnull(sum( fee_amount ),0) sumFeeAmount,
        ifnull(sum( bet_amount ),0) sumBetAmount,
        ifnull(sum( valid_amount ),0) sumValidAmount,
        ifnull(sum( win_amount ),0) sumWinAmount,
        ifnull(sum( water_amount ),0) sumWaterAmount
        FROM
        member_day_report
        WHERE 1= 1
        <if test="userName != null and userName != ''">
            and user_name = #{userName}
        </if>
        <if test="startTime != null and endTime != null">
            and count_date BETWEEN #{startTime}
            AND #{endTime}
        </if>
        <if test="isFristCharge != null and isFristCharge != ''">
            <if test="isFristCharge == isNFristCharge">
                and first_recharge_amount is null
            </if>
            <if test="isFristCharge == isYFristCharge">
                and first_recharge_amount is not null
            </if>
        </if>
        <if test="isFristWithdraw != null and isFristWithdraw != ''">
            <if test="isFristWithdraw == isNFristWithdraw">
                and first_withdraw_amount is null
            </if>
            <if test="isFristWithdraw == isYFristWithdraw">
                and first_withdraw_amount is not null
            </if>
        </if>
    </select>


    <resultMap id="memberRwReport" type="com.gameplat.admin.model.vo.MemberRWReportVo">
        <result column="account" property="userName"/>
        <result column="bank_count" property="bankCount"/>
        <result column="bank_money" property="bankMoney"/>
        <result column="online_count" property="onlineCount"/>
        <result column="online_money" property="onlineMoney"/>
        <result column="hand_rech_count" property="handRechCount"/>
        <result column="hand_rech_money" property="handRechMoney"/>
        <result column="first_rech_money" property="firstRechMoney"/>
        <result column="rech_discount" property="rechDiscount"/>
        <result column="other_discount" property="otherDiscount"/>
        <result column="withdraw_count" property="withdrawCount"/>
        <result column="withdraw_money" property="withdrawMoney"/>
        <result column="hand_withdraw_count" property="handWithdrawCount"/>
        <result column="hand_withdraw_money" property="handWithdrawMoney"/>
        <result column="first_withdraw_money" property="firstWithdrawMoney"/>
        <result column="counter_fee" property="counterFee"/>
        <result column="totail_recharge_amount" property="totailRechargeAmount"/>
        <result column="totail_discout_amount" property="totailDiscoutAmount"/>
        <result column="totail_withdraw_amount" property="totailWithdrawAmount"/>
        <result column="total_rw_amount" property="totalRWAmount"/>
    </resultMap>


    <sql id="memberRwReportSql">
        account
        ,
        bank_count,
        bank_money,
        online_count,
        online_money,
        hand_rech_count,
        hand_rech_money,
        first_rech_money,
        rech_discount,
        other_discount,
        withdraw_count,
        withdraw_money,
        hand_withdraw_count,
        hand_withdraw_money,
        first_withdraw_money,
        counter_fee,
        totail_recharge_amount,
        totail_discout_amount,
        totail_withdraw_amount,
        total_rw_amount
    </sql>


    <select id="findMemberRWReport" resultMap="memberRwReport">
        select
        account,
        sum(bank_count) bank_count,
        sum(bank_money) bank_money,
        sum(online_count) online_count,
        sum(online_money) online_money,
        sum(hand_rech_count) hand_rech_count,
        sum(hand_rech_money) hand_rech_money,
        sum(first_rech_money) first_rech_money,
        sum(rech_discount) rech_discount,
        sum(other_discount) other_discount,
        sum(withdraw_count) withdraw_count,
        sum(withdraw_money) withdraw_money,
        sum(hand_withdraw_count) hand_withdraw_count,
        sum(hand_withdraw_money) hand_withdraw_money,
        sum(first_withdraw_money) first_withdraw_money,
        sum(counter_fee) counter_fee,
        sum(bank_money+ online_money +hand_rech_money) totail_recharge_amount,
        sum(rech_discount + other_discount) totail_discout_amount,
        sum(withdraw_money+ hand_withdraw_money) totail_withdraw_amount,
        sum((bank_money+ online_money +hand_rech_money) - (withdraw_money+ hand_withdraw_money)) total_rw_amount
        from member_rw_report
        where stat_time BETWEEN #{dto.startTime} and #{dto.endTime}
        <if test="dto.username != null and dto.username != ''">
            and account = #{dto.username}
        </if>
        <if test="dto.isFristCharge != null and dto.isFristCharge != ''">
            <if test="dto.isFristCharge == dto.isYFristCharge">
                and first_rech_money > 0
            </if>
        </if>
        group by account
        having 1 = 1
        <if test="dto.startRNum != null">
            and sum(bank_count+online_count + hand_rech_count ) <![CDATA[ >= ]]>  #{dto.startRNum}
        </if>
        <if test="dto.endRNum != null">
            and sum(bank_count+online_count + hand_rech_count ) &lt;= #{dto.endRNum}
        </if>
        <if test="dto.startRAmount != null">
            and sum(bank_money+online_money+hand_rech_money) <![CDATA[ >= ]]> #{dto.startRAmount}
        </if>
        <if test="dto.endRAmount != null">
            and sum(bank_money+online_money+hand_rech_money) &lt;= #{dto.endRAmount}
        </if>
        <if test="dto.startWNum != null">
            and sum(withdraw_count + hand_withdraw_count)  <![CDATA[ >= ]]> #{dto.startWNum}
        </if>
        <if test="dto.endWNum != null">
            and sum(withdraw_count + hand_withdraw_count) &lt;= #{dto.endWNum}
        </if>
        <if test="dto.startWAmount != null">
            and sum(withdraw_money + hand_withdraw_money) <![CDATA[ >= ]]>  #{dto.startWAmount}
        </if>
        <if test="dto.endWAmount != null">
            and sum(withdraw_money + hand_withdraw_money) &lt;= #{dto.endWAmount}
        </if>

    </select>


    <select id="findSumMemberRWReport" resultType="map">
        SELECT
        sum(
        ifnull( bank_count, 0 )) bankCount,
        sum(
        ifnull( bank_money, 0 )) bankMoney,
        sum(
        ifnull( online_count, 0 )) onlineCount,
        sum(
        ifnull( online_money, 0 )) onlineMoney,
        sum(
        ifnull( hand_rech_count, 0 )) handRechCount,
        sum(
        ifnull( hand_rech_money, 0 )) handRechMoney,
        sum(
        ifnull( first_rech_money, 0 )) firstRechMoney,
        sum(
        ifnull( rech_discount, 0 )) rechDiscount,
        sum(
        ifnull( other_discount, 0 )) otherDiscount,
        sum(
        ifnull( withdraw_count, 0 )) withdrawCount,
        sum(
        ifnull( withdraw_money, 0 )) withdrawMoney,
        sum(
        ifnull( hand_withdraw_count, 0 )) handWithdrawCount,
        sum(
        ifnull( hand_withdraw_money, 0 )) handWithdrawMoney,
        sum(
        ifnull( first_withdraw_money, 0 )) firstWithdrawMoney,
        sum(
        ifnull( counter_fee, 0 )) counterFee,
        sum(
        ifnull( totailRechargeAmount, 0 )) totailRechargeAmount,
        sum(
        ifnull( totailDiscoutAmount, 0 )) totailDiscoutAmount,
        sum(
        ifnull( totailWithdrawAmount, 0 )) totailWithdrawAmount
        FROM
        (
        SELECT
        sum(
        ifnull( bank_count, 0 )) bank_count,
        sum(
        ifnull( bank_money, 0 )) bank_money,
        sum(
        ifnull( online_count, 0 )) online_count,
        sum(
        ifnull( online_money, 0 )) online_money,
        sum(
        ifnull( hand_rech_count, 0 )) hand_rech_count,
        sum(
        ifnull( hand_rech_money, 0 )) hand_rech_money,
        sum(
        ifnull( first_rech_money, 0 )) first_rech_money,
        sum(
        ifnull( rech_discount, 0 )) rech_discount,
        sum(
        ifnull( other_discount, 0 )) other_discount,
        sum(
        ifnull( withdraw_count, 0 )) withdraw_count,
        sum(
        ifnull( withdraw_money, 0 )) withdraw_money,
        sum(
        ifnull( hand_withdraw_count, 0 )) hand_withdraw_count,
        sum(
        ifnull( hand_withdraw_money, 0 )) hand_withdraw_money,
        sum(
        ifnull( first_withdraw_money, 0 )) first_withdraw_money,
        sum(
        ifnull( counter_fee, 0 )) counter_fee,
        sum(
        ifnull( bank_money, 0 )+ ifnull( online_money, 0 ) + ifnull( hand_rech_money, 0 )) totailRechargeAmount,
        sum(
        ifnull( rech_discount, 0 ) + ifnull( other_discount, 0 )) totailDiscoutAmount,
        sum(
        ifnull( withdraw_money, 0 )+ ifnull( hand_withdraw_money, 0 )) totailWithdrawAmount
        FROM
        member_rw_report
        where stat_time BETWEEN #{startTime} and #{endTime}
        <if test="username != null and username != ''">
            and account = #{username}
        </if>
        <if test="isFristCharge != null and isFristCharge != ''">
            <if test="isFristCharge == isYFristCharge">
                and first_rech_money > 0
            </if>
        </if>
        GROUP BY
        account
        ) a
        where 1 = 1
        <if test="startRNum != null">
            and (bank_count+online_count + hand_rech_count ) <![CDATA[ >= ]]> #{startRNum}
        </if>
        <if test="endRNum != null">
            and (bank_count+online_count + hand_rech_count ) &lt;= #{endRNum}
        </if>
        <if test="startRAmount != null">
            and (bank_money+online_money+hand_rech_money) <![CDATA[ >= ]]> #{startRAmount}

        </if>
        <if test="endRAmount != null">
            and (bank_money+online_money+hand_rech_money) &lt;= #{endRAmount}
        </if>
        <if test="startWNum != null">
            and (withdraw_count + hand_withdraw_count)  <![CDATA[ >= ]]> #{startWNum}
        </if>
        <if test="endWNum != null">
            and (withdraw_count + hand_withdraw_count) &lt;= #{endWNum}
        </if>
        <if test="startWAmount != null">
            and (withdraw_money + hand_withdraw_money) <![CDATA[ >= ]]> #{startWAmount}

        </if>
        <if test="endWAmount != null">
            and (withdraw_money + hand_withdraw_money) &lt;= #{endWAmount}
        </if>
    </select>


    <resultMap id="memberGameDayReport" type="com.gameplat.admin.model.vo.MemberGameDayReportVo">
        <result column="count_date" property="countDate"/>
        <result column="bank_count" property="bankCount"/>
        <result column="bank_money" property="bankMoney"/>
        <result column="online_count" property="onlineCount"/>
        <result column="online_money" property="onlineMoney"/>
        <result column="hand_rech_count" property="handRechCount"/>
        <result column="hand_rech_money" property="handRechMoney"/>
        <result column="totail_recharge_amount" property="totailRechargeAmount"/>
        <result column="rech_discount" property="rechDiscount"/>
        <result column="other_discount" property="otherDiscount"/>
        <result column="abnormal_income" property="abnormalIncome"/>
        <result column="withdraw_count" property="withdrawCount"/>
        <result column="withdraw_money" property="withdrawMoney"/>
        <result column="hand_withdraw_count" property="handWithdrawCount"/>
        <result column="hand_withdraw_money" property="handWithdrawMoney"/>
        <result column="totail_withdraw_amount" property="totailWithdrawAmount"/>
        <result column="counter_fee" property="counterFee"/>
        <result column="abnormal_outcome" property="abnormalOutcome"/>
        <result column="total_rw_amount" property="totalRWAmount"/>
        <result column="sport_valid_amount" property="sportValidAmount"/>
        <result column="sport_win_amount" property="sportWinAmount"/>
        <result column="lottery_valid_amount" property="lotteryValidAmount"/>
        <result column="lottery_win_amount" property="lotteryWinAmount"/>
        <result column="real_valid_amount" property="realValidAmount"/>
        <result column="real_win_amount" property="realWinAmount"/>
        <result column="real_water_amount" property="realWaterAmount"/>
        <result column="totail_game_winAmout" property="totailGameWinAmout"/>
    </resultMap>


    <select id="findMemberGameDayReport" resultMap="memberGameDayReport">
        SELECT
        b.count_date,
        ifnull(a.bank_count,0) bank_count,
        ifnull(a.bank_money,0) bank_money,
        ifnull(a.online_count,0) online_count,
        ifnull(a.online_money,0) online_money,
        ifnull(a.hand_rech_count,0) hand_rech_count,
        ifnull(a.hand_rech_money,0) hand_rech_money,
        ifnull(a.totail_recharge_amount,0) totail_recharge_amount,
        ifnull(a.rech_discount,0) rech_discount,
        ifnull(a.other_discount,0) other_discount,
        ifnull(a.abnormal_income,0) abnormal_income,
        ifnull(a.withdraw_count,0) withdraw_count,
        ifnull(a.withdraw_money,0) withdraw_money,
        ifnull(a.hand_withdraw_count,0) hand_withdraw_count,
        ifnull(a.hand_withdraw_money,0) hand_withdraw_money,
        ifnull(a.totail_withdraw_amount,0) totail_withdraw_amount,
        ifnull(a.counter_fee,0) counter_fee ,
        ifnull(a.abnormal_outcome,0) abnormal_outcome,
        ifnull(a.total_rw_amount,0) total_rw_amount,
        ifnull(b.sport_valid_amount,0) sport_valid_amount,
        ifnull(b.sport_win_amount,0) sport_win_amount,
        ifnull(b.lottery_valid_amount,0) lottery_valid_amount,
        ifnull(b.lottery_win_amount,0) lottery_win_amount,
        ifnull(b.real_valid_amount,0) real_valid_amount,
        ifnull(b.real_win_amount,0) real_win_amount ,
        ifnull(b.real_water_amount,0) real_water_amount,
        ifnull(b.totail_game_winAmout,0) totail_game_winAmout
        FROM
        (
        SELECT
        count_date,
        sum( sport_valid_amount ) sport_valid_amount,
        sum( sport_win_amount ) sport_win_amount,
        sum( lottery_valid_amount ) lottery_valid_amount,
        sum( lottery_win_amount ) lottery_win_amount,
        sum( real_valid_amount ) real_valid_amount,
        sum( real_win_amount ) real_win_amount,
        sum( real_water_amount ) real_water_amount,
        sum( lottery_win_amount + sport_win_amount + real_win_amount ) totail_game_winAmout
        FROM
        member_day_report
        where
        count_date BETWEEN #{dto.startTime} and #{dto.endTime}
        <if test="dto.type != null and dto.type == 1">
            <if test="dto.username != null and dto.username != ''">
                and agent_path like concat('%',#{dto.username},'%')
            </if>
        </if>
        <if test="dto.type == null or dto.type != 1">
            <if test="dto.username != null and dto.username != ''">
                and user_name = #{dto.username}
            </if>
        </if>
        GROUP BY
        count_date
        ) b
        left JOIN (
        SELECT
        stat_time,
        sum( bank_count ) bank_count,
        sum( bank_money ) bank_money,
        sum( online_count ) online_count,
        sum( online_money ) online_money,
        sum( hand_rech_count ) hand_rech_count,
        sum( hand_rech_money ) hand_rech_money,
        sum( bank_money + online_money + hand_withdraw_money ) totail_recharge_amount,
        sum( rech_discount ) rech_discount,
        sum( other_discount ) other_discount,
        sum( exception_recharge_amount ) abnormal_income,
        sum( withdraw_count ) withdraw_count,
        sum( withdraw_money ) withdraw_money,
        sum( hand_withdraw_count ) hand_withdraw_count,
        sum( hand_withdraw_money ) hand_withdraw_money,
        sum( hand_withdraw_money + withdraw_money ) totail_withdraw_amount,
        sum( counter_fee ) counter_fee,
        sum( exception_withdraw_amount ) abnormal_outcome,
        (
        sum( bank_money + online_money + hand_withdraw_money )- sum( hand_withdraw_money + withdraw_money ))
        total_rw_amount
        FROM
        member_rw_report
        where
        stat_time BETWEEN #{dto.startTime} and #{dto.endTime}
        <if test="dto.type != null and dto.type == 1">
            <if test="dto.username != null and dto.username != ''">
                and super_path like concat('%',#{dto.username},'%')
            </if>
        </if>
        <if test="dto.type == null or dto.type != 1">
            <if test="dto.username != null and dto.username != ''">
                and account = #{dto.username}
            </if>
        </if>
        GROUP BY
        stat_time
        ) a ON a.stat_time = b.count_date
    </select>


    <select id="findSumMemberGameDayReport" resultType="map">
        SELECT
        ifnull( a.bank_count, 0 ) bank_count,
        ifnull( a.bank_money, 0 ) bank_money,
        ifnull( a.online_count, 0 ) online_count,
        ifnull( a.online_money, 0 ) online_money,
        ifnull( a.hand_rech_count, 0 ) hand_rech_count,
        ifnull( a.hand_rech_money, 0 ) hand_rech_money,
        ifnull( a.totail_recharge_amount, 0 ) totail_recharge_amount,
        ifnull( a.rech_discount, 0 ) rech_discount,
        ifnull( a.other_discount, 0 ) other_discount,
        ifnull( a.abnormal_income, 0 ) abnormal_income,
        ifnull( a.withdraw_count, 0 ) withdraw_count,
        ifnull( a.withdraw_money, 0 ) withdraw_money,
        ifnull( a.hand_withdraw_count, 0 ) hand_withdraw_count,
        ifnull( a.hand_withdraw_money, 0 ) hand_withdraw_money,
        ifnull( a.totail_withdraw_amount, 0 ) totail_withdraw_amount,
        ifnull( a.counter_fee, 0 ) counter_fee,
        ifnull( a.abnormal_outcome, 0 ) abnormal_outcome,
        ifnull( a.total_rw_amount, 0 ) total_rw_amount,
        ifnull( b.sport_valid_amount, 0 ) sport_valid_amount,
        ifnull( b.sport_win_amount, 0 ) sport_win_amount,
        ifnull( b.lottery_valid_amount, 0 ) lottery_valid_amount,
        ifnull( b.lottery_win_amount, 0 ) lottery_win_amount,
        ifnull( b.real_valid_amount, 0 ) real_valid_amount,
        ifnull( b.real_win_amount, 0 ) real_win_amount,
        ifnull( b.real_water_amount, 0 ) real_water_amount,
        ifnull( b.totail_game_winAmout, 0 ) totail_game_winAmout
        FROM
        (
        SELECT
        'aa' type,
        sum( bank_count ) bank_count,
        sum( bank_money ) bank_money,
        sum( online_count ) online_count,
        sum( online_money ) online_money,
        sum( hand_rech_count ) hand_rech_count,
        sum( hand_rech_money ) hand_rech_money,
        sum( bank_money + online_money + hand_withdraw_money ) totail_recharge_amount,
        sum( rech_discount ) rech_discount,
        sum( other_discount ) other_discount,
        sum( exception_recharge_amount ) abnormal_income,
        sum( withdraw_count ) withdraw_count,
        sum( withdraw_money ) withdraw_money,
        sum( hand_withdraw_count ) hand_withdraw_count,
        sum( hand_withdraw_money ) hand_withdraw_money,
        sum( hand_withdraw_money + withdraw_money ) totail_withdraw_amount,
        sum( counter_fee ) counter_fee,
        sum( exception_withdraw_amount ) abnormal_outcome,
        (
        sum( bank_money + online_money + hand_withdraw_money )- sum( hand_withdraw_money + withdraw_money ))
        total_rw_amount
        FROM
        member_rw_report
        WHERE
        stat_time BETWEEN #{startTime} and #{endTime}
        <if test="type != null and type == 1">
            <if test="username != null and username != ''">
                and super_path like concat('%',#{username},'%')
            </if>
        </if>
        <if test="type == null or type != 1">
            <if test="username != null and username != ''">
                and account = #{username}
            </if>
        </if>
        ) a
        LEFT JOIN (
        SELECT
        'aa' type,
        sum( sport_valid_amount ) sport_valid_amount,
        sum( sport_win_amount ) sport_win_amount,
        sum( lottery_valid_amount ) lottery_valid_amount,
        sum( lottery_win_amount ) lottery_win_amount,
        sum( real_valid_amount ) real_valid_amount,
        sum( real_win_amount ) real_win_amount,
        sum( real_water_amount ) real_water_amount,
        sum( lottery_win_amount + sport_win_amount + real_win_amount ) totail_game_winAmout
        FROM
        member_day_report
        WHERE
        count_date BETWEEN #{startTime} and #{endTime}
        <if test="type != null and type == 1">
            <if test="username != null and username != ''">
                and agent_path like concat('%',#{username},'%')
            </if>
        </if>
        <if test="type == null or type != 1">
            <if test="username != null and username != ''">
                and user_name = #{username}
            </if>
        </if>

        ) b ON a.type = b.type
    </select>

    <!--获取达到有效投注金额的会员账号-->
    <select id="getSatisfyBetAccount" resultType="java.lang.String">
        SELECT
        t.userName
        FROM
        (
        SELECT
        user_name userName,
        sum( valid_amount ) validAmount
        FROM member_day_report
        <where>
            <if test="startTime != null and startTime != ''">
                AND count_date &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND count_date &lt;= #{endTime}
            </if>
        </where>
        GROUP BY user_id, user_name ) t
        WHERE validAmount >= #{minBetAmount}
    </select>

    <select id="getSpreadReportInfo" resultType="com.alibaba.fastjson.JSONObject">
        SELECT m.user_level                                          userLevel,
               m.lower_num                                           mLower,
               mdr.user_name                                         userName,
               sum(mdr.recharge_count)                               rechargeCount,
               sum(mdr.recharge_amount)                              rechargeAmount,
               sum(mdr.discount_amount)                              discountAmount,
               sum(mdr.jackpot_amount)                               jackpotAmount,
               sum(mdr.withdraw_count)                               withdrawCount,
               sum(mdr.withdraw_amount)                              withdrawAmount,
               sum(mdr.fee_amount)                                   feeAmount,
               sum(mdr.bet_amount)                                   betAmount,
               sum(mdr.valid_amount)                                 validAmount,
               sum(mdr.win_amount)                                   winAmount,
               sum(mdr.water_amount)                                 waterAmount,
               (sum(mdr.recharge_amount) - sum(mdr.withdraw_amount)) income
        FROM member_day_report mdr
                 INNER JOIN member m on m.id = mdr.user_id
        WHERE mdr.count_date BETWEEN #{startTime} AND #{endTime}
          AND agent_path regexp concat('^/',#{account})
        GROUP BY mdr.user_name
    </select>


    <select id="getSpreadReport" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        m.account,
        m.lower_num mLower,
        mdr.agent_path agentPath,
        sum(mdr.recharge_amount) rechargeAmount,
        sum(mdr.withdraw_amount) withdrawAmount,
        (sum(mdr.recharge_amount) - sum(mdr.withdraw_amount)) income
        FROM
        member_day_report mdr
        INNER JOIN member m on m.id = mdr.user_id
        WHERE
        count_date BETWEEN #{startTime} AND #{endTime}
        AND
        agent_path regexp concat(
        <foreach collection="list" item="obj" open="" close="" separator=",'|',">
            concat('^/',#{obj.agentAccount})
        </foreach>
        )
        GROUP BY mdr.user_name
    </select>


    <select id="findMemberbetAnalysis" parameterType="com.gameplat.admin.model.dto.MemberbetAnalysisdto"
            resultType="com.gameplat.admin.model.vo.MemberbetAnalysisVo">
        SELECT
        ifnull(sum( lottery_order_count ),0) lotteryOrderCount ,
        ifnull(sum( sport_order_count ),0) sportOrderCount,
        ifnull(sum( real_order_count ),0) realOrderCount,
        ifnull(sum(eGame_order_count),0) eGameOrderCount,
        ifnull(sum(eSport_order_count),0) eSportOrderCount,
        ifnull(sum(hunter_order_count),0) hunterOrderCount,
        ifnull(sum(chess_order_count),0) chessOrderCount,
        ifnull(sum( lottery_win_order_count ),0) lotteryWinOrderCount,
        ifnull(sum( sport_win_order_count ),0) sportWinOrderCount,
        ifnull(sum( real_win_order_count ),0) realWinOrderCount,
        ifnull(sum(eGame_win_order_count),0) eGameWinOrderCoun,
        ifnull(sum(eSport_win_order_count),0) eSportWinOrderCount,
        ifnull(sum(hunter_win_order_count),0) hunterWinOrderCount,
        ifnull(sum(chess_win_order_count),0) chessWinOrderCount,
        ifnull(sum( lottery_valid_amount ),0) lotteryValidAmount,
        ifnull(sum( sport_valid_amount ),0) sportValidAmount,
        ifnull(sum( real_valid_amount ),0) realValidAmount,
        ifnull(sum(eGame_valid_amount),0) eGameValidAmount,
        ifnull(sum(eSport_valid_amount),0) eSportValidAmount,
        ifnull(sum(hunter_valid_amount),0) hunterValidAmount,
        ifnull(sum(chess_valid_amount),0) chessValidAmount,
        ifnull(sum( lottery_win_amount ),0) lotteryWinAmount,
        ifnull(sum( sport_win_amount ),0) sportWinAmount,
        ifnull(sum( real_win_amount ),0) realWinAmount,
        ifnull(sum(eGame_win_amount),0) eGameWinAmount,
        ifnull(sum(eSport_win_amount),0) eSportWinAmount,
        ifnull(sum(hunter_win_amount),0) hunterWinAmount,
        ifnull(sum(chess_win_amount),0) chessWinAmount,
        ifnull(sum( lottery_water_amount ),0) lotteryWaterAmount,
        ifnull(sum( sport_water_amount ),0) sportWaterAmount,
        ifnull(sum( real_water_amount ),0) realWaterAmount,
        ifnull(sum(eGame_water_amount),0) eGameWaterAmount,
        ifnull(sum(eSport_water_amount),0) eSportWaterAmount,
        ifnull(sum(hunter_water_amount),0) hunterWaterAmount,
        ifnull(sum(chess_water_amount),0) chessWaterAmount,
        ifnull(sum( lottery_profit_rate ),0) lotteryProfitRate,
        ifnull(sum( sport_profit_rate ),0) sportProfitRate,
        ifnull(sum( real_profit_rate ),0) realProfitRate,
        ifnull(sum(eGame_profit_rate),0) eGameProfitRate,
        ifnull(sum(eSport_profit_rate),0) eSportProfitRate,
        ifnull(sum(hunter_profit_rate),0) hunterProfitRate,
        ifnull(sum(chess_profit_rate),0) chessProfitRate,
        ifnull(sum( lottery_win_rate ),0) lotteryWinRate,
        ifnull(sum( sport_win_rate ),0) sportWinRate,
        ifnull(sum( real_win_rate ),0) realWinRate,
        ifnull(sum(eGame_win_rate),0) eGameWinRate,
        ifnull(sum(eSport_win_rate),0) eSportWinRate,
        ifnull(sum(hunter_win_rate),0) hunterWinRate,
        ifnull(sum(chess_win_rate),0) chessWinRate
        FROM
        member_day_report
        WHERE
        count_date BETWEEN #{startTime}
        AND #{endTime}
        <choose>
            <when test="isTrue != null and isTrue != 1">
                <if test="account != null and account != ''">
                    and parent_name = #{account} or user_name = #{account}
                </if>
            </when>
            <otherwise>
                <if test="account != null and account != ''">
                    and user_name = #{account}
                </if>
            </otherwise>
        </choose>
    </select>

    <!--获取代理报表汇总-->
    <select id="agentReportSummary" resultType="com.gameplat.admin.model.vo.MemberDayReportVo">
        SELECT
        ifnull(sum( IF ( first_recharge_amount > 0, 1, 0 ) ), 0) AS firstRechargeNum,
        ifnull(sum( IF ( withdraw_amount > 0, 1, 0 ) ), 0) AS withdrawNum,
        ifnull(sum( IF ( recharge_amount > 0, 1, 0 ) ), 0) AS rechargeNum,
        ifnull(sum( IF ( bet_amount > 0, 1, 0 ) ), 0) AS betNum,
        ifnull(sum( ifnull( first_recharge_amount, 0 ) ), 0) AS firstRechargeAmount,
        ifnull(sum( ifnull( recharge_amount, 0 ) ), 0) AS rechargeAmount,
        ifnull(sum( ifnull( withdraw_amount, 0 ) ), 0) AS withdrawAmount,
        ifnull(sum( ifnull( bet_amount, 0 ) ), 0) AS betAmount,
        ifnull(sum( ifnull( valid_amount, 0 ) ), 0) AS validAmount,
        ifnull(sum( ifnull( win_amount, 0 ) ), 0) * -1 AS winAmount,
        ifnull(sum( ifnull( pay_out_amount, 0 ) ), 0) AS payOutAmount,
        ifnull(sum( ifnull( bonus, 0 ) ), 0) AS bonusAmount,
        ifnull(sum( IF ( bonus > 0, 1, 0)), 0) AS bonusNum,
        ifnull(sum( ifnull( water_amount, 0 ) ), 0) AS waterAmount,
        ifnull((sum( ifnull( win_amount, 0 ) )*-1 - sum( ifnull( bonus, 0 ) ) - sum(ifnull(water_amount, 0))), 0) as companyIncome,
        ifnull(sum(if((ifnull( recharge_amount, 0 ) >= #{limitRecharge} and ifnull( valid_amount, 0 ) >= #{limitValidAmount}), 1, 0)), 0) as member_num
        FROM
        (
        SELECT
        sum( ifnull( first_recharge_amount, 0 ) ) AS first_recharge_amount,
        sum( ifnull( recharge_amount, 0 ) ) AS recharge_amount,
        sum( ifnull( withdraw_amount, 0 ) ) AS withdraw_amount,
        sum( ifnull( bet_amount, 0 ) ) AS bet_amount,
        sum( ifnull( valid_amount, 0 ) ) AS valid_amount,
        sum( ifnull( win_amount, 0 ) ) AS win_amount,
        sum( ifnull( bet_amount, 0 ) ) + sum( ifnull( win_amount, 0 ) ) AS pay_out_amount,
        sum(
        ifnull( discount_amount, 0 ) + ifnull( jackpot_amount, 0 ) + ifnull( vip_reword_amount, 0 ) + ifnull( activity_amount, 0 ) + ifnull( chat_amount, 0 )
        ) AS bonus,
        sum( ifnull( water_amount, 0 ) ) AS water_amount
        FROM
        member_day_report
        <where>
            <if test="agentName != null and agentName != ''">
                <choose>
                    <when test="agentName != 'webRoot' and isIncludeProxy == false">
                        and parent_name = #{agentName} and user_type = 2
                    </when>
                    <when test="agentName != 'webRoot' and isIncludeProxy == true">
                        and parent_name = #{agentName} and user_type in (2,5)
                    </when>
                </choose>
            </if>
            <if test="startDate != null and startDate != ''">
                and count_date between #{startDate} and #{endDate}
            </if>
        </where>
        GROUP BY user_name
        ) AS member
    </select>

    <select id="getTotalMemberAndProxy" resultType="com.gameplat.admin.model.vo.MemberDayReportVo">
        select
        sum(case when user_type = 'M' then 1 else 0 end) as memberTotalNum,
        sum(case when user_type = 'A' then 1 else 0 end ) as agentTotalNum
        from
        (
            select
            account,
            agent_level,
            parent_name as parent_name,
            user_type from member
        ) as aaa
        <where>
            <if test="agentName != null and agentName != ''">
                and parent_name = #{agentName}
            </if>
        </where>
    </select>

    <select id="getMemberAndProxySum" resultType="com.gameplat.admin.model.vo.MemberDayReportVo">
        select
            sum(if(user_type = 'M' and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59'), 1, 0)) as registerNum,
            sum(if(user_type = 'A' and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59'), 1, 0)) as registerAgentNum
        from (
        select
            parent_name as parent_name,
            user_type,
            create_time,
            account from member
        ) as aaa
        <where>
            <if test="agentName != null and agentName != ''">
                and parent_name = #{agentName}
            </if>
        </where>
    </select>

    <!--代理报表-->
    <select id="pageList" resultType="com.gameplat.admin.model.vo.MemberDayReportVo">
        SELECT
        parent_name AS parentName,
        ifnull( sum( IF ( first_recharge_amount > 0, 1, 0 ) ), 0 ) AS firstRechargeNum,
        ifnull( sum( IF ( withdraw_amount > 0, 1, 0 ) ), 0 ) AS withdrawNum,
        ifnull( sum( IF ( recharge_amount > 0, 1, 0 ) ), 0 ) AS rechargeNum,
        ifnull( sum( IF ( bet_amount > 0, 1, 0 ) ), 0 ) AS betNum,
        ifnull( sum( ifnull( first_recharge_amount, 0 ) ), 0 ) AS firstRechargeAmount,
        ifnull( sum( ifnull( recharge_amount, 0 ) ), 0 ) AS rechargeAmount,
        ifnull( sum( ifnull( withdraw_amount, 0 ) ), 0 ) AS withdrawAmount,
        ifnull( sum( ifnull( bet_amount, 0 ) ), 0 ) AS betAmount,
        ifnull( sum( ifnull( valid_amount, 0 )), 0) AS validAmount,
        ifnull( sum( ifnull( win_amount, 0 ) ), 0) * -1 AS winAmount,
        ifnull( sum( ifnull( pay_out_amount, 0 ) ), 0 ) AS payOutAmount,
        ifnull( sum( ifnull( bonus, 0 ) ), 0 ) AS bonusAmount,
        ifnull( sum( IF ( bonus > 0, 1, 0 ) ), 0 ) AS bonusNum,
        ifnull( sum( ifnull( water_amount, 0 ) ), 0 ) AS waterAmount,
        ifnull(sum( ifnull( win_amount, 0 ) ) * -1 - sum( ifnull( bonus, 0 )) - sum( ifnull( water_amount, 0 )), 0) AS companyIncome,
        ifnull(sum(if((ifnull( recharge_amount, 0 ) >= #{limitRecharge} and ifnull( valid_amount, 0 ) >= #{limitValidAmount}), 1, 0)), 0) as memberNum
        FROM
        (
        SELECT
        parent_id as parent_id,
        parent_name as parent_name,
        sum( ifnull( first_recharge_amount, 0 ) ) AS first_recharge_amount,
        sum( ifnull( recharge_amount, 0 ) ) AS recharge_amount,
        sum( ifnull( withdraw_amount, 0 ) ) AS withdraw_amount,
        sum( ifnull( bet_amount, 0 ) ) AS bet_amount,
        sum( ifnull( valid_amount, 0 ) ) AS valid_amount,
        sum( ifnull( win_amount, 0 ) ) AS win_amount,
        sum( ifnull( bet_amount, 0 ) ) + sum( ifnull( win_amount, 0 ) ) AS pay_out_amount,
        sum(
        ifnull( discount_amount, 0 ) + ifnull( jackpot_amount, 0 ) + ifnull( vip_reword_amount, 0 ) + ifnull( activity_amount, 0 ) + ifnull( chat_amount, 0 )
        ) AS bonus,
        sum( ifnull( water_amount, 0 ) ) AS water_amount
        FROM
        member_day_report
        <where>
            <if test="agentName != null and agentName != ''">
                and parent_name = #{agentName}
            </if>
            <if test="startDate != null and startDate != ''">
                and count_date between #{startDate} and #{endDate}
            </if>
        </where>
        GROUP BY user_name
        ) AS member
        GROUP BY parent_name
    </select>

    <!--代理报表-->
    <select id="agentReport" resultType="com.gameplat.admin.model.vo.MemberDayReportVo">
        SELECT
        parent_name AS parentName,
        ifnull( sum( IF ( first_recharge_amount > 0, 1, 0 ) ), 0 ) AS firstRechargeNum,
        ifnull( sum( IF ( withdraw_amount > 0, 1, 0 ) ), 0 ) AS withdrawNum,
        ifnull( sum( IF ( recharge_amount > 0, 1, 0 ) ), 0 ) AS rechargeNum,
        ifnull( sum( IF ( bet_amount > 0, 1, 0 ) ), 0 ) AS betNum,
        ifnull( sum( ifnull( first_recharge_amount, 0 ) ), 0 ) AS firstRechargeAmount,
        ifnull( sum( ifnull( recharge_amount, 0 ) ), 0 ) AS rechargeAmount,
        ifnull( sum( ifnull( withdraw_amount, 0 ) ), 0 ) AS withdrawAmount,
        ifnull( sum( ifnull( bet_amount, 0 ) ), 0 ) AS betAmount,
        ifnull( sum( ifnull( valid_amount, 0 )), 0) AS validAmount,
        ifnull( sum( ifnull( win_amount, 0 ) ), 0) * -1 AS winAmount,
        ifnull( sum( ifnull( pay_out_amount, 0 ) ), 0 ) AS payOutAmount,
        ifnull( sum( ifnull( bonus, 0 ) ), 0 ) AS bonusAmount,
        ifnull( sum( IF ( bonus > 0, 1, 0 ) ), 0 ) AS bonusNum,
        ifnull( sum( ifnull( water_amount, 0 ) ), 0 ) AS waterAmount,
        ifnull(sum( ifnull( win_amount, 0 ) ) * -1 - sum( ifnull( bonus, 0 )) - sum( ifnull( water_amount, 0 )), 0) AS companyIncome,
        ifnull(sum(if((ifnull( recharge_amount, 0 ) >= #{limitRecharge} and ifnull( valid_amount, 0 ) >= #{limitValidAmount}), 1, 0)), 0) as memberNum
        FROM
        (
        SELECT
        parent_id as parent_id,
        parent_name as parent_name,
        sum( ifnull( first_recharge_amount, 0 ) ) AS first_recharge_amount,
        sum( ifnull( recharge_amount, 0 ) ) AS recharge_amount,
        sum( ifnull( withdraw_amount, 0 ) ) AS withdraw_amount,
        sum( ifnull( bet_amount, 0 ) ) AS bet_amount,
        sum( ifnull( valid_amount, 0 ) ) AS valid_amount,
        sum( ifnull( win_amount, 0 ) ) AS win_amount,
        sum( ifnull( bet_amount, 0 ) ) + sum( ifnull( win_amount, 0 ) ) AS pay_out_amount,
        sum(
        ifnull( discount_amount, 0 ) + ifnull( jackpot_amount, 0 ) + ifnull( vip_reword_amount, 0 ) + ifnull( activity_amount, 0 ) + ifnull( chat_amount, 0 )
        ) AS bonus,
        sum( ifnull( water_amount, 0 ) ) AS water_amount
        FROM
        member_day_report
        <where>
            <if test="agentName != null and agentName != ''">
                and parent_name = #{agentName}
            </if>
            <if test="startDate != null and startDate != ''">
                and count_date between #{startDate} and #{endDate}
            </if>
        </where>
        GROUP BY user_name
        ) AS member
        GROUP BY parent_name
    </select>

    <select id="getMemberAndProxy" resultType="com.gameplat.admin.model.vo.MemberDayReportVo">
        select
            a.agent_name as parentName,
            a.member_total_num as memberTotalNum,
            a.agent_total_num as agentTotalNum,
            a.register_num as registerNum,
            a.register_agent_num as registerAgentNum,
            b.agent_level as agentLevel
        from (
        select
        parent_name as agent_name,
        sum(if(user_type = 'M' and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59'), 1, 0)) as register_num,
        sum(if(user_type = 'A' and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59'), 1, 0)) as register_agent_num,
        sum(case when user_type = 'M' then 1 else 0 end ) as member_total_num,
        sum(case when user_type = 'A' then 1 else 0 end ) as agent_total_num
        from (
            select
                parent_id as parent_id,
                create_time,
                agent_level,
                account,
                parent_name as parent_name,
                user_type
            from member
        ) as aaa
        <where>
            <if test="agentName != null and agentName != ''">
                and parent_name = #{agentName}
            </if>
        </where>
        group by parent_name
        ) as a inner join member b on a.agent_name = b.account
        where b.user_type = 'A'
    </select>
</mapper>
