<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameplat.admin.mapper.MemberLoanMapper">

    <select id="page" resultType="com.gameplat.admin.model.vo.MemberLoanVO" parameterType = "com.gameplat.admin.model.dto.MemberLoanQueryDTO">
        select
            l.id,
            i.member_id memberId,
            m.account,
            m.user_level userLevel,
            m.super_path superPath,
            i.vip_level vipLevel,
            i.balance memberBalance,
            g.loan_money loanMoney,
            l.loan_time loanTime,
            IFNULL(l.loan_status, 1) loanStatus,
            IFNULL(l.overdraft_money, 0.0000) overdraftMoney
        from member_info i
            left join member m on m.id = i.member_id
            left join member_growth_level g on g.level = i.vip_level
            left join
            (
                SELECT id, loan_time, loan_status, overdraft_money, member_id FROM member_loan
                WHERE id IN ( SELECT max( id ) id FROM member_loan GROUP BY member_id )
            ) l ON i.member_id = l.member_id
        <where>
            m.status = 1 and g.level > 0
            <if test="account != null">
                AND m.account = #{account}
            </if>
            <if test="vipLevel != null">
                AND i.vip_level = #{vipLevel}
            </if>
            <if test="minOverdraftMoney != null and maxOverdraftMoney != null">
                AND IFNULL(l.overdraft_money, 0.0000) BETWEEN #{minOverdraftMoney} and #{maxOverdraftMoney}
            </if>
            <if test="beginLoanTime != null and endLoanTime != null">
                AND l.loan_time BETWEEN #{beginLoanTime} and #{endLoanTime}
            </if>
            <if test="loanStatus != null">
                AND IFNULL(l.loan_status, 1) = #{loanStatus}
            </if>
        </where>
    </select>


    <select id="getNewRecord" resultType="com.gameplat.admin.model.vo.MemberLoanVO" >
        select id,
               loan_time,
               loan_status,
               overdraft_money,
               member_id
        from (SELECT
                  id,
                  loan_time,
                  loan_status,
                  overdraft_money,
                  member_id from member_loan
              where id in (SELECT max( id ) id from member_loan GROUP BY member_id)
             ) l
        where member_id = #{memberId}
    </select>
</mapper>
