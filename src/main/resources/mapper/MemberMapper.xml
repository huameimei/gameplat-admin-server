<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameplat.admin.mapper.MemberMapper">
    <select id="queryPage" resultType="MemberVO">
        SELECT t1.id,
               t1.account,
               t1.nickname,
               t1.user_level,
               t1.agent_level,
               t1.super_path,
               t1.user_type,
               t1.parent_name,
               t1.status,
               t1.remark,
               t1.qq,
               t1.wechat,
               t1.email,
               t1.withdraw_flag,
               t1.dial_code,
               t1.phone,
               t1.register_ip,
               t1.register_host,
               t1.register_source,
               t1.register_browser,
               t1.register_os,
               t1.create_time,
               t1.real_name,
               t1.lower_num,
               t2.vip_level,
               t2.vip_growth,
               t2.last_login_ip,
               t2.last_login_time,
               t2.balance,
               t2.freeze,
               t2.invitation_code,
               t2.total_rech_amount,
               t2.total_rech_times,
               t2.total_withdraw_amount,
               t2.total_withdraw_times
        FROM member t1
                 LEFT JOIN member_info t2 ON t1.id = t2.member_id
            ${ew.customSqlSegment}
    </select>

    <select id="queryList" resultType="MemberVO">
        SELECT t1.id,
               t1.account,
               t1.nickname,
               t1.user_level,
               t1.agent_level,
               t1.super_path,
               t1.user_type,
               t1.parent_name,
               t1.status,
               t1.remark,
               t1.qq,
               t1.wechat,
               t1.email,
               t1.withdraw_flag,
               t1.dial_code,
               t1.phone,
               t1.register_ip,
               t1.register_host,
               t1.register_source,
               t1.register_browser,
               t1.register_os,
               t1.create_time,
               t1.real_name,
               t1.lower_num,
               t2.vip_level,
               t2.vip_growth,
               t2.last_login_ip,
               t2.last_login_time,
               t2.balance,
               t2.freeze,
               t2.invitation_code,
               t2.total_rech_amount,
               t2.total_rech_times,
               t2.total_withdraw_amount,
               t2.total_withdraw_times
        FROM member t1
                     LEFT JOIN member_info t2 ON t1.id = t2.member_id
                ${ew.customSqlSegment}
    </select>

    <select id="getMemberInfo" parameterType="java.lang.Long" resultType="MemberInfoVO">
        SELECT t1.id,
               t1.account,
               t1.nickname,
               t1.user_level,
               t1.agent_level,
               t1.user_type,
               t1.withdraw_flag,
               t1.parent_name,
               t1.status,
               t1.language,
               t1.remark,
               t1.sex,
               t1.qq,
               t1.wechat,
               t1.email,
               t1.phone,
               t1.dial_code,
               t1.birthday,
               t1.register_ip,
               t1.register_host,
               t1.register_source,
               t1.register_browser,
               t1.register_os,
               t1.create_time,
               t1.real_name,
               t2.vip_level,
               t2.vip_growth,
               t2.last_login_ip,
               t2.last_login_time,
               t2.balance,
               t2.freeze,
               t2.rebate,
               t2.invitation_code,
               t2.last_rech_time,
               t2.last_withdraw_time,
               t2.total_rech_amount,
               t2.total_rech_times,
               t2.total_withdraw_amount,
               t2.total_withdraw_times
        FROM member t1
                 LEFT JOIN member_info t2 ON t1.id = t2.member_id
        WHERE t1.id = #{id}
    </select>

    <sql id="batchUpdateSuperPathSql">
        UPDATE member
        SET super_path  = CONCAT(#{superPath}, account, "/"),
            agent_level = agent_level + ((#{superAgentLevel} - #{agentLevel}) + 1)
    </sql>

    <!-- 仅转移下级-->
    <select id="batchUpdateSuperPathExcludeSelf" parameterType="Member">
        <include refid="batchUpdateSuperPathSql"/>
        WHERE parent_name = #{account}
    </select>

    <select id="batchUpdateSuperPath" parameterType="Member">
        <include refid="batchUpdateSuperPathSql"/>
        WHERE parent_name = #{account} OR account = #{account}
    </select>

    <update id="updateLowerNumByAccount">
        UPDATE member SET lower_num = lower_num + #{lowerNum} WHERE account = #{account}
    </update>

    <select id="getMemberInfoByAccount" parameterType="java.lang.String" resultType="com.gameplat.admin.model.vo.MemberInfoVO">
        SELECT t1.id,
               t1.account,
               t1.nickname,
               t1.user_level as userLevel,
               t1.agent_level as agentLevel,
               t1.parent_id as parentId,
               t1.user_type as userType,
               t1.parent_name as parentName,
               t1.status,
               t1.remark,
               t1.sex,
               t1.qq,
               t1.wechat,
               t1.email,
               t1.phone,
               t1.birthday,
               t1.register_ip as registerIp,
               t1.register_source as registerSource,
               t1.create_time as createTime,
               t1.real_name as realName,
               t1.table_index as tableIndex,
               t2.vip_level,
               t2.vip_growth,
               t1.super_path as superPath,
               t2.last_login_ip as lastLoginIp,
               t2.last_login_time as lastLoginTime,
               t2.balance,
               t2.invitation_code as invitationCode,
               t2.last_rech_time as lastRechTime,
               t2.last_withdraw_time as lastWithdrawTime,
               t2.total_rech_amount as totalRechAmount,
               t2.total_rech_times as totalRechTimes,
               t2.total_withdraw_amount as totalWithdrawAmount,
               t2.total_withdraw_times as totalWithdrawTimes
        FROM member t1
                 LEFT JOIN member_info t2 ON t1.id = t2.member_id
        WHERE t1.account = #{account}
    </select>

    <select id="getListByAgentAccout" resultType="com.gameplat.admin.model.domain.Member">
        SELECT t1.id,
               t1.account,
               t1.nickname,
               t1.user_level,
               t1.agent_level,
               t1.parent_id,
               t1.user_type,
               t1.parent_name,
               t1.status,
               t1.remark,
               t1.sex,
               t1.qq,
               t1.wechat,
               t1.email,
               t1.phone,
               t1.birthday,
               t1.register_ip,
               t1.register_source,
               t1.create_time,
               t1.real_name,
               t1.super_path,
               t2.vip_level,
               t2.vip_growth,
               t2.last_login_ip,
               t2.last_login_time,
               t2.balance,
               t2.invitation_code,
               t2.last_rech_time,
               t2.last_withdraw_time,
               t2.total_rech_amount,
               t2.total_rech_times,
               t2.total_withdraw_amount,
               t2.total_withdraw_times
        FROM member t1
                 LEFT JOIN member_info t2 ON t1.id = t2.member_id
        WHERE t1.super_path LIKE concat('%', #{agentAccout},'%')
    </select>

    <select id="findByUserNameList" resultType="com.gameplat.admin.model.domain.Member">
        select * from member t where t.nickname in
        <foreach item="userName" collection="userNames" open="(" separator="," close=")">
            #{userName}
        </foreach>

    </select>

    <select id="findIp" parameterType="com.gameplat.admin.model.dto.QueryIpStatReportDTO" resultType="com.gameplat.admin.model.vo.IpStatisticsVO">
        select
        register_ip as loginIp,
        count(1) as frequency
        from  member
        where 1=1
        and user_type = 'M'
        <if test="ip != null">
            and register_ip = #{ip}
        </if>
        <if test="beginDate != null and beginDate != ''">
            and date_format(create_time,'%y%m%d') <![CDATA[ >= ]]> date_format(#{beginDate},'%y%m%d')
        </if>
        <if test="endDate != null and endDate != ''">
            and date_format(create_time,'%y%m%d') <![CDATA[ <= ]]> date_format(#{endDate},'%y%m%d')
        </if>
        group by register_ip
        <if test="count != null and count != ''">
            having count(1) >= #{count}
        </if>
        ORDER BY create_Time desc
    </select>

    <select id="findIpAnalysisList" parameterType="com.gameplat.admin.model.dto.QueryIpStatReportDTO" resultType="com.gameplat.admin.model.vo.IpAnalysisVO">
        select
                id as memberId,
                account,
                real_name as fullName,
                register_ip as ipAddress,
                count(*) as ipCount
        from member
        WHERE 1=1
          AND user_type = 'M'
        <if test="account != null and account != ''">
            AND account = #{account}
        </if>
        <if test="ip != null and ip != ''">
            AND register_ip = #{ip}
        </if>
        <if test="beginDate != null and beginDate != ''">
            and date_format(create_time,'%y%m%d') <![CDATA[ >= ]]> date_format(#{beginDate},'%y%m%d')
        </if>
        <if test="endDate != null and endDate != ''">
            and date_format(create_time,'%y%m%d') <![CDATA[ <= ]]> date_format(#{endDate},'%y%m%d')
        </if>
        group by register_ip
        order by id desc, create_time desc
    </select>

    <select id="getInfoByAccount" resultType="com.gameplat.admin.model.domain.Member">
        select
        id as id,
        account as account,
        real_name as realName,
        super_path as superPath
        from member
        <where>
            <if test="accountList != null and accountList.size > 0">
                account in
                <foreach collection="accountList" item="account" open="(" close=")" separator="," index="index">
                    #{account}
                </foreach>
            </if>
        </where>
    </select>
</mapper>
