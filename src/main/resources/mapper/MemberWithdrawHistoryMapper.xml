<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameplat.admin.mapper.MemberWithdrawHistoryMapper">


    <select id="findPage" resultType="com.gameplat.admin.model.vo.MemberWithdrawHistoryVO">
        select  w.id,
                w.cash_order_no,
                w.member_id,
                w.account,
                w.real_name,
                w.account_money,
                w.cash_money,
                w.bank_name,
                w.bank_card,
                w.bank_address,
                w.cash_mode,
                w.cash_reason,
                w.cash_status,
                w.create_time,
                w.accept_account,
                w.accept_time,
                w.operator_account,
                w.operator_time,
                w.approve_reason,
                w.approve_money,
                w.risk_opraccount,
                w.risk_oprtime,
                w.risk_status,
                w.counter_fee,
                w.member_level,
                w.super_id,
                w.super_name,
                w.super_path,
                w.fk,
                w.police_flag,
                w.browser,
                w.mac_os,
                w.ip_address,
                w.user_agent,
                w.proxy_pay_status,
                w.proxy_pay_desc,
                w.point_flag,
                w.pp_interface,
                w.pp_interface_name,
                w.pp_merchant_id,
                w.pp_merchant_name,
                w.member_memo,
                w.member_type,
                w.withdraw_type,
                w.currency_rate,
                w.currency_count,
                w.currency_protocol,
                w.approve_currency_rate,
                w.approve_currency_count,
                m.remark as userRemark
        from member_withdraw_history as w
        left join member as m
        on w.member_id = m.id
        ${ew.customSqlSegment}
    </select>

   <select id="findIp" parameterType="com.gameplat.admin.model.dto.QueryIpStatReportDTO" resultType="com.gameplat.admin.model.vo.IpStatisticsVO">
       select
               ip_address as loginIp,
               count(1) as frequency
       from  member_withdraw_history
       where 1=1
       <if test="ip != null">
          and ip_address = #{ip}
       </if>
       <if test="beginDate != null and beginDate != ''">
           and date_format(create_time,'%y%m%d') <![CDATA[ >= ]]> date_format(#{beginDate},'%y%m%d')
       </if>
       <if test="endDate != null and endDate != ''">
           and date_format(create_time,'%y%m%d') <![CDATA[ <= ]]> date_format(#{endDate},'%y%m%d')
       </if>
       group by ip_address
       <if test="count != null and count != ''">
           having count(1) >= #{count}
       </if>
       ORDER BY create_Time desc
   </select>

    <!--    提现IP分析  -->
    <select id="page" parameterType="com.gameplat.admin.model.dto.IpAnalysisDTO" resultType="com.gameplat.admin.model.vo.IpAnalysisVO">
        SELECT
        distinct member_id as memberId,
        account,
        real_name as fullName,
        ip_address as ipAddress,
        (select count(distinct member_id,  COALESCE(ip_address,'null')) from member_withdraw_history where 1=1 and ip_address = ipAddress) as ipCount,
        account_money money
        from member_withdraw_history
        WHERE 1 = 1
        <if test="dto.account != null"> and account = #{dto.account}</if>
        <if test="dto.loginIp != null"> and ip_address = #{dto.loginIp}</if>
        <if test="dto.beginTime != null and dto.beginTime != ''">
            and date_format(create_time,'%y%m%d') <![CDATA[ >= ]]> date_format(#{dto.beginTime},'%y%m%d')
        </if>
        <if test="dto.endTime != null and dto.endTime != ''">
            and date_format(create_time,'%y%m%d') <![CDATA[ <= ]]> date_format(#{dto.endTime},'%y%m%d')
        </if>
        group by member_id, ip_address
        order by member_id desc, create_time desc
    </select>
</mapper>
