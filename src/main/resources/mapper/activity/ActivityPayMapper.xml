<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameplat.admin.mapper.activity.ActivityPayDao">

  <resultMap type="com.gameplat.admin.model.domain.activity.ActivityPay2" id="BaseResultMap">
    <result property="id" column="id"/>
    <result property="userId" column="user_id"/>
    <result property="activityId" column="activity_id"/>
    <result property="payTime" column="pay_time"/>
    <result property="firstAmount" column="first_amount"/>
    <result property="amount" column="amount"/>
    <result property="status" column="status"/>
    <result property="createBy" column="create_by"/>
    <result property="createTime" column="create_time"/>
    <result property="updateTime" column="update_time"/>
    <result property="orderNo" column="order_no"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, activity_id, pay_time, first_amount, amount, status, create_by, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from activity_pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from activity_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gameplat.admin.model.domain.activity.ActivityPay2">
    insert into activity_pay (id, user_id, activity_id,
      pay_time, first_amount, amount,
      status, create_by, create_time,
      update_time)
    values (#{id}, #{userId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER},
      #{payTime}, #{firstAmount,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.gameplat.admin.model.domain.activity.ActivityPay2">
    insert into activity_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="firstAmount != null">
        first_amount,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=DATE},
      </if>
      <if test="firstAmount != null">
        #{firstAmount,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.gameplat.admin.model.domain.activity.ActivityPay2">
    update activity_pay
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=DATE},
      </if>
      <if test="firstAmount != null">
        first_amount = #{firstAmount,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gameplat.admin.model.domain.activity.ActivityPay2">
     update activity_pay
        set user_id = #{userId,jdbcType=INTEGER},
          activity_id = #{activityId,jdbcType=INTEGER},
          pay_time = #{payTime,jdbcType=DATE},
          first_amount = #{firstAmount,jdbcType=VARCHAR},
          amount = #{amount,jdbcType=VARCHAR},
          status = #{status,jdbcType=INTEGER},
          create_by = #{createBy,jdbcType=VARCHAR},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertBatchActivityPay">
    insert into activity_pay (id,user_id,pay_time,amount)
    VALUES
    <foreach collection="list" index="index" item="item" separator="," >
      (#{item.id},  #{item.userId} , #{item.payTime} ,#{item.amount})
    </foreach>
  </insert>

  <select id="findCumulativeUserPay" resultType="com.gameplat.admin.model.vo.activity.StaticActivityVO">
        SELECT user_id userId, count(DISTINCT(DATE_FORMAT(pay_time,'%Y-%m-%d'))) cumulativePayDateCount,SUM(amount) cumulativePayAmount
        FROM activity_pay
        <where>
            <if test="startTime != null">
                and pay_time >= #{startTime},
            </if>
            <if test="endTime != null">
                and pay_time &lt;= #{endTime},
            </if>
            <if test="payType != null">
                and status in (${payType}),
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        GROUP BY user_id
    </select>
  <select id="findFirstPayAmount" resultType="com.gameplat.admin.model.vo.activity.StaticActivityVO">

    SELECT user_id userId,min(pay_time) payTime,amount firstPayAmount FROM activity_pay
    WHERE pay_time >= #{startTime} and pay_time &lt;= #{endTime} and status in (${payType})
    GROUP BY user_id
  </select>
  <select id="findContinuousDays" resultType="com.gameplat.admin.model.vo.activity.StaticActivityVO">
    SELECT user_id userId, DATE_FORMAT(pay_time,"%Y-%m-%d") payTime
    FROM activity_pay
    WHERE pay_time >= #{startTime} and pay_time &lt;= #{endTime} and status in (${payType})
  </select>

  <select id="findCurrentTimePatList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from activity_pay
    where pay_time <![CDATA[ >= ]]> #{startTime} and pay_time <![CDATA[ <= ]]> now()
  </select>

  <select id="dealFirstDayPay" resultType="com.gameplat.admin.model.vo.activity.StaticActivityVO">
    SELECT
        user_id userId,
        amount firstPayDayAmount,
        DATE_FORMAT( pay_time, '%Y-%m-%d %H:%i:%S' ) payTime
    FROM
        activity_pay
    WHERE
        pay_time >= #{startTime} and pay_time &lt;= #{endTime} and status in (${payType}) and
        pay_time IN ( SELECT MIN( pay_time ) FROM activity_pay GROUP BY user_id, DATE_FORMAT( pay_time, '%Y-%m-%d' ) )
    GROUP BY
        user_id,
        DATE_FORMAT(
        pay_time,
        '%Y-%m-%d')
  </select>
</mapper>
